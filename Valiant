-- / Locals
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local InputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Client = Players.LocalPlayer
local Mouse = Client:GetMouse()
local Stepped = RunService.RenderStepped


-- / Tween Tables & Functions
local TweenTable = {
    Default = {
        TweenInfo.new(0.17, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, false, 0)
    }
}
local CreateTween = function(name, speed, style, direction, loop, reverse, delay)
    name = name
    speed = speed or 0.17
    style = style or Enum.EasingStyle.Sine
    direction = direction or Enum.EasingDirection.InOut
    loop = loop or 0
    reverse = reverse or false
    delay = delay or 0

    TweenTable[name] = TweenInfo.new(speed, style, direction, loop, reverse, delay)
end



-- / Library int
local library = {
    title = title or "Valiant",
    fps = 0
}

library.theme = {
    Theme = Color3.fromRGB(255, 0, 0),
    Font = Enum.Font.Code
}

-- / Display FPS
coroutine.wrap(function()
    RunService.RenderStepped:Connect(function(v)
        library.fps =  math.round(1/v)
    end)
end)()



-- / Stuff for Watermark
function library:GetDay(type)
    if type == "word" then -- Day in full word
        return os.date("%A")
    elseif type == "short" then -- Day in short
        return os.date("%a")
    end
end

function library:GetTime(type)
    if type == "24h" then -- Time on 24hr Clock
        return os.date("%H")
    elseif type == "12h" then -- Time on 12hr Clock
        return os.date("%I")
    elseif type == "Minute" then -- Time in Minutes
        return os.date("%M")
    elseif type == "Meridiem" then -- Display [AM or PM]
        return os.date("%p")
    elseif type == "Seconds" then -- Time in Seconds
        return os.date("%S")
    elseif type == "Full" then -- Full Time Display
        return os.date("%X")
    elseif type == "Zone" then -- Time Zone
        return os.date("%Z") 
    end
end

function library:GetMonth(type)
    if type == "Full" then -- Full Month
        return os.date("%B")
    elseif type == "Short" then -- Shortened Month
        return os.date("%b")
    end
end

function library:GetYear(type)
    if type == "Full" then -- Full Digits of Year
        return os.date("%Y")
    elseif type == "Shorten" then -- The 2 digits of the year
        return os.date("%y")
    end
end

function library:Watermark(text)
    text = text or library.title

    local Watermark = Instance.new("ScreenGui")
    local WMControl = Instance.new("UIPadding")
    local WMLayout = Instance.new("UIListLayout")
    local WaterMarkHolder = Instance.new("Frame")
    local TopLine = Instance.new("Frame")
    local WatermarkText = Instance.new("TextLabel")



    Watermark.Name = "Watermark"
    Watermark.Parent = CoreGui
    Watermark.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    WMControl.Name = "WMControl"
    WMControl.Parent = Watermark
    WMControl.PaddingBottom = UDim.new(0, 7)
    WMControl.PaddingLeft = UDim.new(0, 7)

    WMLayout.Name = "WMLayout"
    WMLayout.Parent = Watermark
    WMLayout.SortOrder = Enum.SortOrder.LayoutOrder
    WMLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    WMLayout.Padding = UDim.new(0, 7)

    WaterMarkHolder.Name = "WaterMarkHolder"
    WaterMarkHolder.Parent = Watermark
    WaterMarkHolder.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    WaterMarkHolder.BorderSizePixel = 0
    WaterMarkHolder.Size = UDim2.new(0, 125, 0, 25)

    TopLine.Name = "TopLine"
    TopLine.Parent = WaterMarkHolder
    TopLine.BackgroundColor3 = library.theme.Theme
    TopLine.BorderSizePixel = 0
    TopLine.Size = UDim2.new(1, 0, 0.0299999993, 0)

    WatermarkText.Name = "WatermarkText"
    WatermarkText.Parent = WaterMarkHolder
    WatermarkText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    WatermarkText.BackgroundTransparency = 1.000
    WatermarkText.Position = UDim2.new(0, 0, 0.0299999993, 0)
    WatermarkText.Size = UDim2.new(1, 0, 0.970000029, 0)
    WatermarkText.Font = library.theme.Font
    WatermarkText.Text = text
    WatermarkText.TextColor3 = Color3.fromRGB(255, 255, 255)
    WatermarkText.TextScaled = true
    WatermarkText.TextSize = 14.000

    local NewSize = TextService:GetTextSize(WatermarkText.Text, WatermarkText.TextSize, WatermarkText.Font, Vector2.new(math.huge, math.huge))
    WaterMarkHolder.Size = UDim2.new(0, NewSize.X + 8, 0, 25)

    local wmhandle = {}

    function wmhandle:Watermark(text)
        text = text or library.title

        local WaterMarkHolder = Instance.new("Frame")
        local TopLine = Instance.new("Frame")
        local WatermarkText = Instance.new("TextLabel")

        WaterMarkHolder.Name = "WaterMarkHolder"
        WaterMarkHolder.Parent = Watermark
        WaterMarkHolder.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        WaterMarkHolder.BorderSizePixel = 0
        WaterMarkHolder.Size = UDim2.new(0, 125, 0, 25)

        TopLine.Name = "TopLine"
        TopLine.Parent = WaterMarkHolder
        TopLine.BackgroundColor3 = library.theme.Theme
        TopLine.BorderSizePixel = 0
        TopLine.Size = UDim2.new(1, 0, 0.0299999993, 0)

        WatermarkText.Name = "WatermarkText"
        WatermarkText.Parent = WaterMarkHolder
        WatermarkText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        WatermarkText.BackgroundTransparency = 1.000
        WatermarkText.Position = UDim2.new(0, 0, 0.0299999993, 0)
        WatermarkText.Size = UDim2.new(1, 0, 0.970000029, 0)
        WatermarkText.Font = library.theme.Font
        WatermarkText.Text = text
        WatermarkText.TextColor3 = Color3.fromRGB(255, 255, 255)
        WatermarkText.TextScaled = true
        WatermarkText.TextSize = 14.000

        local NewSize = TextService:GetTextSize(WatermarkText.Text, WatermarkText.TextSize, WatermarkText.Font, Vector2.new(math.huge, math.huge))
        WaterMarkHolder.Size = UDim2.new(0, NewSize.X + 8, 0, 25)

    end

    return wmhandle

end

return library

local wm = library:Watermark("GayTest")
